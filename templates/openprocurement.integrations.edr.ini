[pipeline:main]
pipeline = request_id api

[app:api]
use = egg:openprocurement.integrations.edr
edr_api_server = ${options['edr_api_host']}
edr_api_port = ${options['edr_api_port']}
edr_timeout_min = ${options['edr_timeout_min']}
edr_timeout_max = ${options['edr_timeout_max']}
edr_timeout_step = ${options['edr_timeout_step']}
edr_timeout_mode = ${options['edr_timeout_mode']}
auth.file = ${options['auth_file']}
keys.file = ${options['keys_file']}
pyramid.reload_templates = ${options['debug']}
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = ${options['debug']}
pyramid.default_locale_name = en
exclog.extra_info = true
{% if 'cache_db_name' in options %}cache_db_name = ${options['cache_db_name']}{% end %}
{% if 'cache_host' in options %}cache_host = ${options['cache_host']}{% end %}
{% if 'cache_port' in options %}cache_port = ${options['cache_port']}{% end %}
{% if 'time_to_live' in options %}time_to_live = ${options['time_to_live']}{% end %}
{% if 'time_to_live_negative' in options %}time_to_live_negative = ${options['time_to_live_negative']}{% end %}
{% if options['debug'] == 'true' %}
filter-with = profile

[filter:profile]
use = egg:repoze.profile
log_filename = myapp.profile
cachegrind_filename = cachegrind.out.myapp
discard_first_request = true
path = /__profile__
flush_at_shutdown = true
unwind = false
{% end %}
{% if options['debug'] == 'false' %}
filter-with = proxy-prefix

[filter:proxy-prefix]
use = egg:PasteDeploy#prefix
{% end %}
[filter:request_id]
paste.filter_factory = request_id_middleware.middleware:RequestIdMiddleware.factory
env_request_id = REQUEST_ID
resp_header_request_id = X-Request-ID

[server:main]
use = egg:chaussette
host = 0.0.0.0
port = 6547
backend = gevent

# Begin logging configuration

[loggers]
keys = root,openprocurement${',exc_logger' if 'exc_logger' in options else ''}

[handlers]
keys = console${',journal' if 'journal' in options else ''}

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_openprocurement]
level = DEBUG
handlers = {% if 'journal' in options %}journal{% end %}
qualname = openprocurement

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic
{% if 'exc_logger' in options %}
[logger_exc_logger]
level = ERROR
handlers = {% if 'journal' in options %}journal{% end %}
qualname = exc_logger
propagate = 0
{% end %}
{% if 'journal' in options %}
[handler_journal]
class = ExtendedJournalHandler.ExtendedJournalHandler
args = ()
{% end %}
[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
